A) The COUNT function and GROUP BY clause are used to count distinct
prerequisites. The last row of the result set shows the number of prerequisites with a
null value.
SELECT prerequisite, COUNT(*)
 FROM course
 GROUP BY prerequisite
 ORDER BY prerequisite
PREREQUISITE COUNT(*)
------------ ---------
 10 1
 20 5
...
 350 2
 420 1
 4
17 rows selected.

B) To obtain the distinct students, use the STUDENT_ID column in the GROUP BY
clause. For each of the groups, count records for each student with the COUNT function.
Eliminate only those students enrolled in more than two sections from the groups with
the HAVING clause.
SELECT student_id, COUNT(*)
 FROM enrollment
 GROUP BY student_id
HAVING COUNT(*) > 2
STUDENT_ID COUNT(*)
---------- ---------
 124 4
 184 3
...
 238 3
 250 3
7 rows selected.

C) The SELECT statement uses the AVG function and the ROUND function. The
GROUP BY clause ensures that the average capacity is displayed for each course.
SELECT course_no "Course #",
 AVG(capacity) "Avg. Capacity",
 ROUND(AVG(capacity)) "Rounded Avg. Capacity"
 FROM section
 GROUP BY course_no
Course # Avg Capacity Rounded Avg Capacity
-------- ------------ ---------------------
 10 15 15
 20 20 20
 25 22.777778 23
...
 350 21.666667 22
 420 25 25
 450 25 25
28 rows selected.

D)The HAVING clause is added to limit the result set to courses appearing exactly
twice.
SELECT course_no "Course #",
 AVG(capacity) "Avg. Capacity",
 ROUND(AVG(capacity)) "Rounded Avg. Capacity"
 FROM section
 GROUP BY course_no
HAVING COUNT(*) = 2
Course # Avg. Capacity Rounded Avg. Capacity
--------- ------------- ---------------------
 132 25 25
 145 25 25
 146 20 20
 230 13.5 14
 240 12.5 13
5 rows selected.